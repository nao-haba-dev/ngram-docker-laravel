{"ast":null,"code":"var _jsxFileName = \"/Users/habanaoki/Documents/Practice/sample/hello-world/src/index.tsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst title = \"Hello,world!\";\nconst body = \"本文です\";\n\nconst hoge = () => {\n  return \"文字列を返す\";\n};\n\nconst returnReactElem = () => {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"\\u30C6\\u30AD\\u30B9\\u30C8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n\nconst returnReactElem2 = (text, word) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nconst Component1 = () => {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"hoge\\u30FC\\u30FC\\u30FC\\u30FC\\u30FC\\u30FC\\u30FC\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}; // React要素を指定されたcontainerの中のDOMにレンダリング\n\n\n_c = Component1;\nReactDOM.render(\n/*#__PURE__*/\n// use strictと同じ\n_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Component1, {\n    name: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// 結果をコンソールに記録したり、特定のエンドポイントに送信したりする\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"Component1\");","map":{"version":3,"sources":["/Users/habanaoki/Documents/Practice/sample/hello-world/src/index.tsx"],"names":["React","ReactDOM","reportWebVitals","title","body","hoge","returnReactElem","returnReactElem2","text","word","Component1","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,KAAK,GAAG,cAAd;AACA,MAAMC,IAAI,GAAG,MAAb;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,SAAO,QAAP;AACD,CAFD;;AAIA,MAAMC,eAAe,GAAG,MAAM;AAC5B,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,MAAMC,gBAAgB,GAAG,CAACC,IAAD,EAAeC,IAAf,KAAgC;AACvD,sBACE;AAAA,4BACE;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;AASA,MAAMC,UAAU,GAAG,MAAM;AACvB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD,C,CAIA;;;KAJMA,U;AAKNT,QAAQ,CAACU,MAAT;AAAA;AACE;AACA,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,UAAD;AAAY,IAAA,IAAI;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QAFF,EAKEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF,E,CAQA;AACA;AACA;AAEA;;AACAX,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst title = \"Hello,world!\";\nconst body = \"本文です\";\n\nconst hoge = () => {\n  return \"文字列を返す\";\n};\n\nconst returnReactElem = () => {\n  return <h2>テキスト</h2>;\n};\n\nconst returnReactElem2 = (text: string, word: string) => {\n  return (\n    <div>\n      <h2>{text}</h2>\n      <h2>{word}</h2>\n    </div>\n  );\n};\n\nconst Component1 = () => {\n  return <h2>hogeーーーーーーー</h2>;\n};\n\n// React要素を指定されたcontainerの中のDOMにレンダリング\nReactDOM.render(\n  // use strictと同じ\n  <React.StrictMode>\n    <Component1 name/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// 結果をコンソールに記録したり、特定のエンドポイントに送信したりする\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}